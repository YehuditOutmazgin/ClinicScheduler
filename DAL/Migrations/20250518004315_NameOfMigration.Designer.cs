// <auto-generated />
using System;
using DAL.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace DAL.Migrations
{
    [DbContext(typeof(DB_Manager))]
    [Migration("20250518004315_NameOfMigration")]
    partial class NameOfMigration
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("DAL.Models.Appointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<DateOnly>("AppointmentDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("AppointmentTime")
                        .HasColumnType("time");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("PatientID");

                    b.Property<string>("Status")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("TherapistId")
                        .HasColumnType("int")
                        .HasColumnName("TherapistID");

                    b.HasKey("AppointmentId")
                        .HasName("PK__tmp_ms_x__8ECDFCA29761D564");

                    b.HasIndex("PatientId");

                    b.HasIndex("TherapistId");

                    b.ToTable("Appointments");
                });

            modelBuilder.Entity("DAL.Models.AvailableAppointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<DateOnly>("AppointmentDate")
                        .HasColumnType("date");

                    b.Property<int>("DurationMinutes")
                        .HasColumnType("int");

                    b.Property<int>("Specialization")
                        .HasColumnType("int");

                    b.Property<int>("TherapistId")
                        .HasColumnType("int")
                        .HasColumnName("TherapistID");

                    b.Property<TimeOnly>("TimeSlot")
                        .HasColumnType("time");

                    b.HasKey("AppointmentId")
                        .HasName("PK__ Availab__8ECDFCA22FD333AC");

                    b.HasIndex("TherapistId");

                    b.ToTable(" AvailableAppointments ", (string)null);
                });

            modelBuilder.Entity("DAL.Models.CanceledAppointment", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<int>("AppointmentId")
                        .HasColumnType("int")
                        .HasColumnName("AppointmentID");

                    b.Property<string>("Note")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("PatientID");

                    b.HasKey("Id")
                        .HasName("PK__Canceled__3214EC07FE3D6961");

                    b.HasIndex("AppointmentId");

                    b.HasIndex("PatientId");

                    b.ToTable("CanceledAppointments");
                });

            modelBuilder.Entity("DAL.Models.PassedAppointment", b =>
                {
                    b.Property<int>("AppointmentId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("AppointmentID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("AppointmentId"));

                    b.Property<DateOnly>("AppointmentDate")
                        .HasColumnType("date");

                    b.Property<TimeOnly>("AppointmentTime")
                        .HasColumnType("time");

                    b.Property<int>("PatientId")
                        .HasColumnType("int")
                        .HasColumnName("PatientID");

                    b.Property<string>("Status")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("TherapistId")
                        .HasColumnType("int")
                        .HasColumnName("TherapistID");

                    b.HasKey("AppointmentId")
                        .HasName("PK__PassedAp__8ECDFCA288F68629");

                    b.HasIndex("PatientId");

                    b.HasIndex("TherapistId");

                    b.ToTable("PassedAppointments");
                });

            modelBuilder.Entity("DAL.Models.Patient", b =>
                {
                    b.Property<int>("PatientId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("PatientID");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PatientId"));

                    b.Property<int>("Age")
                        .HasColumnType("int");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(15)
                        .IsUnicode(false)
                        .HasColumnType("varchar(15)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.HasKey("PatientId")
                        .HasName("PK__Patients__970EC34695D48E27");

                    b.ToTable("Patients");
                });

            modelBuilder.Entity("DAL.Models.Therapist", b =>
                {
                    b.Property<int>("TherapistId")
                        .HasColumnType("int")
                        .HasColumnName("TherapistID");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<string>("PhoneNumber")
                        .IsRequired()
                        .HasMaxLength(10)
                        .HasColumnType("nchar(10)")
                        .IsFixedLength()
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<int>("Specialization")
                        .HasColumnType("int");

                    b.HasKey("TherapistId")
                        .HasName("PK__Therapis__4D6219123B144696");

                    b.ToTable("Therapists");
                });

            modelBuilder.Entity("DAL.Models.WorkHour", b =>
                {
                    b.Property<int>("Id")
                        .HasColumnType("int");

                    b.Property<string>("DayOfWeek")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .UseCollation("SQL_Latin1_General_CP1_CI_AS");

                    b.Property<TimeOnly>("EndTime")
                        .HasColumnType("time");

                    b.Property<TimeOnly>("StartTime")
                        .HasColumnType("time");

                    b.Property<int>("TherapistId")
                        .HasColumnType("int")
                        .HasColumnName("TherapistID");

                    b.HasKey("Id")
                        .HasName("PK__WorkHour__3214EC07CE44524E");

                    b.HasIndex("TherapistId");

                    b.ToTable("WorkHours");
                });

            modelBuilder.Entity("DAL.Models.Appointment", b =>
                {
                    b.HasOne("DAL.Models.Patient", "Patient")
                        .WithMany("Appointments")
                        .HasForeignKey("PatientId")
                        .IsRequired()
                        .HasConstraintName("FK__Appointme__Patie__51300E55");

                    b.HasOne("DAL.Models.Therapist", "Therapist")
                        .WithMany("Appointments")
                        .HasForeignKey("TherapistId")
                        .IsRequired()
                        .HasConstraintName("FK__Appointme__Thera__5AB9788F");

                    b.Navigation("Patient");

                    b.Navigation("Therapist");
                });

            modelBuilder.Entity("DAL.Models.AvailableAppointment", b =>
                {
                    b.HasOne("DAL.Models.Therapist", "Therapist")
                        .WithMany("AvailableAppointments")
                        .HasForeignKey("TherapistId")
                        .IsRequired()
                        .HasConstraintName("FK__ Availabl__Thera__0697FACD");

                    b.Navigation("Therapist");
                });

            modelBuilder.Entity("DAL.Models.CanceledAppointment", b =>
                {
                    b.HasOne("DAL.Models.Appointment", "Appointment")
                        .WithMany("CanceledAppointments")
                        .HasForeignKey("AppointmentId")
                        .IsRequired()
                        .HasConstraintName("FK__CanceledA__Appoi__2F9A1060");

                    b.HasOne("DAL.Models.Patient", "Patient")
                        .WithMany("CanceledAppointments")
                        .HasForeignKey("PatientId")
                        .IsRequired()
                        .HasConstraintName("FK__CanceledA__Patie__2EA5EC27");

                    b.Navigation("Appointment");

                    b.Navigation("Patient");
                });

            modelBuilder.Entity("DAL.Models.PassedAppointment", b =>
                {
                    b.HasOne("DAL.Models.Patient", "Patient")
                        .WithMany("PassedAppointments")
                        .HasForeignKey("PatientId")
                        .IsRequired()
                        .HasConstraintName("FK__PassedApp__Patie__1B9317B3");

                    b.HasOne("DAL.Models.Therapist", "Therapist")
                        .WithMany("PassedAppointments")
                        .HasForeignKey("TherapistId")
                        .IsRequired()
                        .HasConstraintName("FK__PassedApp__Thera__1C873BEC");

                    b.Navigation("Patient");

                    b.Navigation("Therapist");
                });

            modelBuilder.Entity("DAL.Models.WorkHour", b =>
                {
                    b.HasOne("DAL.Models.Therapist", "Therapist")
                        .WithMany("WorkHours")
                        .HasForeignKey("TherapistId")
                        .IsRequired()
                        .HasConstraintName("FK__WorkHours__Thera__09746778");

                    b.Navigation("Therapist");
                });

            modelBuilder.Entity("DAL.Models.Appointment", b =>
                {
                    b.Navigation("CanceledAppointments");
                });

            modelBuilder.Entity("DAL.Models.Patient", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("CanceledAppointments");

                    b.Navigation("PassedAppointments");
                });

            modelBuilder.Entity("DAL.Models.Therapist", b =>
                {
                    b.Navigation("Appointments");

                    b.Navigation("AvailableAppointments");

                    b.Navigation("PassedAppointments");

                    b.Navigation("WorkHours");
                });
#pragma warning restore 612, 618
        }
    }
}
